---
# tasks file for hoplacloud.apache_php

- name: Install Ondrej Apache2 PPA Repository
  apt_repository:
    repo: 'ppa:ondrej/apache2'

- name: Install Ondrej PHP PPA Repository
  apt_repository:
    repo: 'ppa:ondrej/php'

- name: Install Apache2 and PHP-FPM Packages
  apt:
    name:
      - apache2
      - php{{ php_version }}-mbstring
      - php{{ php_version }}-mysql
      - php{{ php_version }}-xml
      - php{{ php_version }}-zip
      - php{{ php_version }}-gd
      - php{{ php_version }}-curl
      - php{{ php_version }}-bz2
      - php{{ php_version }}-fpm
      - php{{ php_version }}-intl
      - php-apcu
    state: latest
    update_cache: yes

- name: Enabling Apache2 modules
  apache2_module: name={{ item }} state=present
  with_items:
    - proxy_fcgi
    - setenvif
    - headers
    - rewrite
    - deflate
    - http2

- name: Disabling Apache2 indexes modules
  apache2_module:
    name: autoindex
    state: absent
    force: true

- name: Configure Apache2 basic security (ServerTokens)
  lineinfile:
    path: /etc/apache2/conf-available/security.conf
    regexp: '^ServerTokens'
    line: 'ServerTokens prod'
  notify:
    - restart apache

- name: Configure Apache2 basic security (ServerSignature)
  lineinfile:
    path: /etc/apache2/conf-available/security.conf
    regexp: '^ServerSignature'
    line: 'ServerSignature Off'
  notify:
    - restart apache

- name: Remove default Apache site directory
  file:
    state: absent
    path: /var/www/html

- name: Create new Apache site directory
  file:
    path: /var/www/default_site
    state: directory
    mode: 0755

- name: Create new Apache site directory index.html
  file:
    path: /var/www/default_site/index.html
    state: touch
    mode: 0755

- name: Patching default non-ssl vhost
  lineinfile:
    path: /etc/apache2/sites-available/000-default.conf
    regexp: '\t*DocumentRoot'
    line: 'DocumentRoot /var/www/default_site'
  notify:
    - restart apache

- name: Patching default ssl vhost
  lineinfile:
    path: /etc/apache2/sites-available/default-ssl.conf
    regexp: '\t*DocumentRoot'
    line: 'DocumentRoot /var/www/default_site'
  notify:
    - restart apache

- name: Patching default non-ssl vhost (user email)
  lineinfile:
    path: /etc/apache2/sites-available/000-default.conf
    regexp: '\t*ServerAdmin'
    line: 'ServerAdmin {{ user_email }}'
  notify:
    - restart apache

- name: Patching default ssl vhost (user email)
  lineinfile:
    path: /etc/apache2/sites-available/default-ssl.conf
    regexp: '\t*ServerAdmin'
    line: 'ServerAdmin {{ user_email }}'
  notify:
    - restart apache

- name: Ensure the vhost_deploy directory is present
  file:
    path: /usr/src/vhost_deploy_apache
    state: directory

- name: Sending vhost_deploy_apache file
  template:
    src: vhost_deploy.sh.j2
    dest: /usr/src/vhost_deploy_apache/vhost_deploy.sh
    mode: '0755'

- name: Creating symlink for vhost_deploy.sh script
  file:
    src: /usr/src/vhost_deploy_apache/vhost_deploy.sh
    dest: /usr/local/sbin/vhost_deploy
    state: link

- name: Sending the php.ini configuration file (FPM)
  template:
    src: php.ini.j2
    dest: /etc/php/{{ php_version }}/fpm/php.ini
  notify:
    - restart php-fpm

- name: Sending the php.ini configuration file (CLI)
  template:
    src: php.ini.j2
    dest: /etc/php/{{ php_version }}/cli/php.ini
  notify:
    - restart php-fpm

- name: Creating websites directory /var/www/sites
  file:
    path: /var/www/sites
    state: directory

- name: Creating home symlink to /var/www/sites
  file:
    src: /var/www
    dest: /home/{{ user_name }}/my_websites
    state: link

- name: Check if Composer is installed.
  stat:
    path: /usr/local/bin/composer
  register: composer_bin

- name: Get Composer installer signature.
  uri:
    url: https://composer.github.io/installer.sig
    return_content: true
  register: composer_installer_signature
  when: not composer_bin.stat.exists

- name: Download Composer installer.
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/composer-installer.php
    mode: 0755
    checksum: "sha384:{{ composer_installer_signature.content }}"
  when: not composer_bin.stat.exists

- name: Run Composer installer.
  command: php /tmp/composer-installer.php --install-dir=/usr/local/bin --filename=composer
  when: not composer_bin.stat.exists
